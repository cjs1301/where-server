version: "3.8"

services:
#  traefik:
#    image: traefik
#    command:
#      - --api.insecure=true
#      - --api.dashboard=true
#      - --entryPoints.web.address=:80
#      - --entryPoints.web.forwardedHeaders.insecure
#      - --providers.docker
#      - --providers.docker.swarmMode=true
#      - --providers.docker.exposedByDefault=false
#      - --providers.docker.network=odiya
#      - --log.level=DEBUG
#    ports:
#      - "80:80"
#      - "8080:8080" # Traefik dashboard
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    networks:
#      - odiya
#    deploy:
#      mode: replicated
#      replicas: 2
#      update_config:
#        order: start-first
#        delay: 10s
#        failure_action: rollback
#      rollback_config:
#        order: stop-first
#        parallelism: 0
#      restart_policy:
#        condition: on-failure
#        delay: 5s
#        max_attempts: 3
#      placement:
#        constraints:
#          - node.role == manager


  spring-server:
    container_name: "spring-server"
    image: cjs5241/odiya-server
    ports:
      - "4000:4000"
    healthcheck:
      test: ["CMD", "curl", "--fail", "--silent", "http://localhost:4000/actuator/health", "|", "grep", "UP", "||", "exit", "1"]
      interval: 20s
      timeout: 5s
      retries: 5
      start_period: 40s
    deploy:
      mode: replicated
      replicas: 2
#      resources:
#        limits:
#          memory: '1g'
#          cpus: '1'
      update_config:
        order: start-first
        delay: 5s
        failure_action: rollback
      rollback_config:
        order: stop-first
        parallelism: 0
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    networks:
      - odiya
#    labels:
#      - traefik.enable=true
#      - traefik.docker.network=odiya
#      - traefik.http.routers.spring-server.rule=Host(`server.odiya.link`)
#      - traefik.http.routers.spring-server.entrypoints=web
#      - traefik.http.services.spring-server.loadbalancer.server.port=4000

  rabbitmq:
    image: rabbitmq:3.12.13-management-alpine
    restart: on-failure
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
      - "61613:61613"
    networks:
      - odiya

networks:
  odiya:
    external: true
